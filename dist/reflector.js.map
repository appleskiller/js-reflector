{"version":3,"sources":["webpack:///webpack/bootstrap 6adbfc1cdf28b35d054e","webpack:///./src/reflector.ts"],"names":[],"mappings":"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","file":"dist/reflector.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6adbfc1cdf28b35d054e","// -----------------------------------------------------------\r\n// Interfaces\r\n// ===========================================================\r\n/**\r\n * 类类型\r\n * \r\n * @export\r\n * @interface IClass\r\n * @extends {Function}\r\n */\r\nexport interface IClass extends Function{\r\n    new (...args): IClass;\r\n}\r\n/**\r\n * 属性描述\r\n * \r\n * @export\r\n * @interface IPropertySchema\r\n */\r\nexport interface IPropertySchema {\r\n    [key: string]: any;\r\n    /**\r\n     * 属性名\r\n     * \r\n     * @type {string}\r\n     */\r\n    name: string;\r\n    /**\r\n     * 标记是否是静态成员\r\n     * \r\n     * @type {boolean}\r\n     */\r\n    isStatic: boolean;\r\n    /**\r\n     * 标记是否是方法成员\r\n     * \r\n     * @type {boolean}\r\n     */\r\n    isMethod: boolean;\r\n    /**\r\n     * 成员的类型名。如果存在则是一个类的完整类名\r\n     */\r\n    type?: string;\r\n}\r\n/**\r\n * 类描述\r\n * \r\n * @export\r\n * @interface IClassSchema\r\n */\r\nexport interface IClassSchema {\r\n    [key: string]: any;\r\n    /**\r\n     * 类名称\r\n     * \r\n     * @type {string}\r\n     */\r\n    className: string,\r\n    /**\r\n     * 父类名称\r\n     * \r\n     * @type {string}\r\n     */\r\n    superClass: string;\r\n    /**\r\n     * 静态属性\r\n     * \r\n     * @type {{[key: string]: IPropertySchema}}\r\n     */\r\n    staticProperties: {[key: string]: IPropertySchema};\r\n    /**\r\n     * 属性\r\n     * \r\n     * @type {{[key: string]: IPropertySchema}}\r\n     */\r\n    properties: {[key: string]: IPropertySchema};\r\n}\r\n\r\nexport interface IObjectSchema {\r\n    /**\r\n     * 对象的类型\r\n     * \r\n     * @type {string}\r\n     */\r\n    type: string,\r\n    /**\r\n     * 属性\r\n     * \r\n     * @type {{[key: string]: IPropertySchema}}\r\n     */\r\n    properties: {[key: string]: IPropertySchema};\r\n}\r\n\r\n/**\r\n * 钩子类型。registerMetadataHook方法type参数的有效枚举\r\n * \r\n * @export\r\n * @interface IHookTypes\r\n */\r\nexport interface IHookTypes {\r\n    CLASS: string;\r\n    STATIC_PROPERTY: string;\r\n    PROPERTY: string;\r\n}\r\n/**\r\n * 为类和类成员添加额外的元信息。使用@metadata(key, value)注册自定义元信息或使用metadata内建字段赋值，例如@metadata.className(\"ClassA\")即为class命名为ClassA.\r\n * \r\n * @export\r\n * @interface IMetadataStatic\r\n */\r\nexport interface IMetadataStatic {\r\n    (key: string, value?: any): Function;\r\n    /**\r\n     * 为类附加类名信息。\r\n     * \r\n     * @param {string} value \r\n     * @returns {Function} \r\n     */\r\n    className(value: string): Function;\r\n    /**\r\n     * 为类附加父类名信息\r\n     * \r\n     * @param {(string | Function | IClass)} value \r\n     * @returns {Function} \r\n     */\r\n    superClass(value: string | Function | IClass): Function;\r\n    /**\r\n     * 为属性附加类型信息\r\n     * \r\n     * @param {(string | Function | IClass)} value \r\n     * @returns {Function} \r\n     */\r\n    type(value: string | Function | IClass): Function;\r\n}\r\n/**\r\n * 反射工具方法集.\r\n */\r\n/**\r\n * \r\n */\r\nexport interface IReflectorUtil {\r\n    /**\r\n     * 获得指定对象的类。obj参数为除null和undefined外的任意对象。\r\n     * \r\n     * @param {*} obj 除null和undefined外的任意对象\r\n     * @returns {IClass} 类对象\r\n     */\r\n    getClass(obj: any): IClass;\r\n    /**\r\n     * 获得指定类的类名。\r\n     * \r\n     * @param {(Function | IClass)} classObject 类对象\r\n     * @returns {string} 类名\r\n     */\r\n    getClassName(classObject: Function | IClass): string;\r\n    /**\r\n     * 获得指定类名的类。\r\n     * \r\n     * @param {string} className 类名\r\n     * @returns {IClass} 类对象\r\n     */\r\n    getClassByName(className: string): IClass;\r\n    /**\r\n     * 获得指定类的父类\r\n     * \r\n     * @param {(Function | IClass)} classObject 类对象\r\n     * @returns {IClass} 父类对象\r\n     */\r\n    getSuperClass(classObject: Function | IClass): IClass;\r\n    /**\r\n     * 获得指定类的父类名\r\n     * \r\n     * @param {(Function | IClass)} classObject 类对象\r\n     * @returns {string} 父类类名\r\n     */\r\n    getSuperClassName(classObject: Function | IClass): string;\r\n    /**\r\n     * 使用指定类名和参数构造类实例\r\n     * \r\n     * @param {string} className 类名\r\n     * @param {any} args 构造函数参数\r\n     * @returns {*} 类实例对象\r\n     */\r\n    newInstance(className: string, ...args): any;\r\n    /**\r\n     * 获得类的描述。如果declared为false(默认)此方法只返回声明在其自身上的描述信息，不包含父类中声明的信息，否则将返回在此类及所有祖辈类上声明的信息\r\n     * \r\n     * @param {(Function | IClass)} classObject 类对象\r\n     * @param {boolean} [declared] 是否反射祖辈描述\r\n     * @returns {IClassSchema} 类描述\r\n     */\r\n    getClassSchema(classObject: Function | IClass, declared?: boolean): IClassSchema;\r\n    /**\r\n     * 获得任意对象的描述。如果指定对象为函数，则按类对象进行反射并返回描述.\r\n     * 如果allMembers设置为true，将尝试反射所有属性成员的描述，否则，则返回其类型所声明的成员描述\r\n     * \r\n     * @param {*} obj 指定对象\r\n     * @param {boolean} [allMembers] 是否反射全部成员描述\r\n     * @returns {IObjectSchema} \r\n     */\r\n    describe(obj: any, allMembers?: boolean): IObjectSchema;\r\n    /**\r\n     * 获得对象制定属性的描述。如果obj为函数，则返回的描述中isStatic属性为true。\r\n     * 如果obj为null或undefined则将抛出异常。\r\n     * \r\n     * @param {*} obj \r\n     * @param {string} propertyName 对象属性名称\r\n     * @param {*} value 对象属性值\r\n     * @returns {IPropertySchema} 属性描述\r\n     */\r\n    describeProperty(obj: any, propertyName: string, value: any): IPropertySchema;\r\n}\r\n\r\n\r\n// -----------------------------------------------------------\r\n// Utils\r\n// ===========================================================\r\nfunction isDefined(value: any): boolean {\r\n    return value !== null && value !== undefined;\r\n}\r\nfunction isClass(obj: any): boolean {\r\n    return typeof obj === \"function\";\r\n}\r\nfunction isObject(x: any): boolean {\r\n    return typeof x === \"object\" && x !== null;\r\n}\r\nfunction mixin(target: any, source: any): void {\r\n    for (var key in source) { target[key] = source[key]; }\r\n    return target;\r\n}\r\nfunction isMethodDesc(desc: any): boolean {\r\n    return !!desc && typeof desc.get !== \"function\" && typeof desc.set !== \"function\"\r\n}\r\nvar count = 0;\r\nfunction uniqueId(prefex: string): string {\r\n    return prefex + \"_\" + (count++);\r\n}\r\n\r\nclass _Map {\r\n    private _keys = [];\r\n    private _values = [];\r\n    private _cacheKey = {};\r\n    private _cacheIndex = -1;\r\n    private _find(key: any): number {\r\n        if (this._cacheKey === key) return this._cacheIndex;\r\n        var ind = this._keys.indexOf(key);\r\n        if (ind >= 0) {\r\n            this._cacheKey = key;\r\n            this._cacheIndex = ind;\r\n        }\r\n        return ind;\r\n    }\r\n    get(key: any): any {\r\n        var ind = this._find(key);\r\n        return ind >= 0 ? this._values[ind] : undefined;\r\n    }\r\n    set(key: any, value: any): _Map {\r\n        var ind = this._find(key);\r\n        if (ind >= 0) {\r\n            this._values[ind] = value;\r\n        } else {\r\n            this._keys.push(key);\r\n            this._values.push(value);\r\n        }\r\n        return this;\r\n    }\r\n    delete(key: any): boolean {\r\n        var ind = this._find(key);\r\n        if (ind >= 0) {\r\n            this._keys.splice(ind, 1);\r\n            this._values.splice(ind, 1);\r\n            this._cacheKey = {};\r\n            this._cacheIndex = -1;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nconst NULLTYPE = \"Null\";\r\nconst UNDEFINEDTYPE = \"Undefined\";\r\nvar name2Class: {[className: string]: IClass} = {};\r\nvar class2Schema: _Map = new _Map();\r\nvar class2DeclaredSchema: _Map = new _Map();\r\n\r\n// -----------------------------------------------------------\r\n// Hooks\r\n// ===========================================================\r\n/**\r\n * 钩子类型。registerMetadataHook方法type参数的有效枚举\r\n * @type {IHookTypes}\r\n */\r\nexport var hookTypes: IHookTypes = {\r\n    CLASS: \"classHook\",\r\n    STATIC_PROPERTY: \"staticPropertyHook\",\r\n    PROPERTY: \"propertyHook\",\r\n}\r\nvar hooks = {\r\n    classHook: {},\r\n    staticPropertyHook: {},\r\n    propertyHook: {}\r\n}\r\n/**\r\n * 注册元信息描述钩子函数。在为类附加描述信息时，处理器会顺序调用已注册的钩子函数，将最终的返回结果注册为元信息值。\r\n * \r\n * @export\r\n * @param {string} type 钩子类型。reflector.hookTypes声明了可选类型\r\n * @param {string} key 元信息键名\r\n * @param {((value: any, classObject: Function | IClass, oriValue: any) => any)} hook 钩子函数。value为上一个钩子函数的返回值，oriValue为未处理的初始值\r\n */\r\nexport function registerMetadataHook(type: string, key: string, hook: (value: any, classObject: Function | IClass, oriValue: any) => any): void {\r\n    if (!hooks[type] || !key || !hook) throw new TypeError();\r\n    var array = hooks[type][key] = hooks[type][key] || [];\r\n    array.push(hook);\r\n}\r\n\r\n// -----------------------------------------------------------\r\n// metadata\r\n// ===========================================================\r\n// 排除不必merge到属性描述上的class描述\r\nvar ignorePropertySchemaMergeKeys = {\r\n    type: true,\r\n    className: true,\r\n    superClass: true,\r\n    properties: true,\r\n    staticProperties: true,\r\n}\r\n// 排除不必merge到对象描述上的class描述\r\nvar ignoreObjectSchemaMergeKeys = {\r\n    className: true,\r\n    superClass: true,\r\n    properties: true,\r\n    staticProperties: true,\r\n}\r\n/**\r\n * 将类信息合入属性描述\r\n * \r\n * @param {IPropertySchema} schema \r\n * @param {IClassSchema} classSchema \r\n * @returns {void} \r\n */\r\nfunction mergeClassSchemaToPropertySchema(schema: IPropertySchema, classSchema: IClassSchema): void {\r\n    if (!schema || !classSchema) return;\r\n    for (var key in classSchema) {\r\n        if (key in schema || ignorePropertySchemaMergeKeys[key]) { continue; }\r\n        else { schema[key] = classSchema[key] }\r\n    }\r\n}\r\n/**\r\n * 合并属性描述\r\n * \r\n * @param {IPropertySchema} schema \r\n * @param {IPropertySchema} superSchema \r\n * @returns {IPropertySchema} \r\n */\r\nfunction mergePropertySchema(schema: IPropertySchema, superSchema: IPropertySchema): IPropertySchema {\r\n    var result = <IPropertySchema>{};\r\n    var key;\r\n    if (schema) {\r\n        // merge schema\r\n        for (key in schema) { result[key] = schema[key]; }\r\n    }\r\n    if (superSchema) {\r\n        // merge superschema\r\n        for (key in superSchema) {\r\n            if (key in result) { continue; }\r\n            else { result[key] = superSchema[key] }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction mergeClassSchemaProperties(properties: { [key: string]: IPropertySchema }, superProperties: { [key: string]: IPropertySchema }): { [key: string]: IPropertySchema } {\r\n    var result = <{ [key: string]: IPropertySchema }>{};\r\n    var propertyName;\r\n    for (propertyName in properties) { result[propertyName] = properties[propertyName]; }\r\n    if (superProperties) {\r\n        for (propertyName in superProperties) {\r\n            result[propertyName] = mergePropertySchema(result[propertyName], superProperties[propertyName]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 合并类描述信息\r\n * \r\n * @param {IClassSchema} schema \r\n * @param {IClassSchema} superSchema \r\n * @returns {IClassSchema} \r\n */\r\nfunction mergeSchema(schema: IClassSchema, superSchema: IClassSchema): IClassSchema {\r\n    var result = <IClassSchema>{};\r\n    var key;\r\n    for (key in schema) { result[key] = schema[key]; }\r\n    for (key in superSchema) {\r\n        // merge properties\r\n        if (key === \"properties\") { result[key] = mergeClassSchemaProperties(result[key], superSchema[key]) }\r\n        // merge staticProperties 不merge父类静态属性\r\n        else if (key === \"staticProperties\") { result[key] = mergeClassSchemaProperties(result[key], null) }\r\n        else if (key in result) { continue }\r\n        else { result[key] = superSchema[key] }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 创建null描述\r\n * \r\n * @param {string} propName \r\n * @param {IPropertySchema} propertySchema \r\n * @param {boolean} isStatic \r\n * @returns {IPropertySchema} \r\n */\r\nfunction createNullValueSchema(propName: string, propertySchema: IPropertySchema, isStatic: boolean): IPropertySchema {\r\n    if (!propertySchema) return {name: propName, type: NULLTYPE, isMethod: false, isStatic: isStatic};\r\n    var result = <IPropertySchema>{};\r\n    // merge schema\r\n    for (var key in propertySchema) { result[key] = propertySchema[key]; }\r\n    result.name = propName;\r\n    result.isMethod = !!(propertySchema && propertySchema.isMethod);\r\n    result.type = propertySchema.type || NULLTYPE;\r\n    result.isStatic = isStatic;\r\n    return result;\r\n}\r\n/**\r\n * 创建undefined描述\r\n * \r\n * @param {string} propName \r\n * @param {IPropertySchema} propertySchema \r\n * @param {boolean} isStatic \r\n * @returns {IPropertySchema} \r\n */\r\nfunction createUndefinedValueSchema(propName: string, propertySchema: IPropertySchema, isStatic: boolean): IPropertySchema {\r\n    if (!propertySchema) return {name: propName, type: UNDEFINEDTYPE, isMethod: false, isStatic: isStatic};\r\n    var result = <IPropertySchema>{};\r\n    // merge schema\r\n    for (var key in propertySchema) { result[key] = propertySchema[key]; }\r\n    result.name = propName;\r\n    result.isMethod = !!(propertySchema && propertySchema.isMethod);\r\n    result.type = propertySchema.type || UNDEFINEDTYPE;\r\n    result.isStatic = isStatic;\r\n    return result;\r\n}\r\n/**\r\n * 创建函数描述\r\n * \r\n * @param {string} propName \r\n * @param {IPropertySchema} propertySchema \r\n * @param {boolean} isStatic \r\n * @returns {IPropertySchema} \r\n */\r\nfunction createFunctionValueSchema(propName: string, propertySchema: IPropertySchema, isStatic: boolean): IPropertySchema {\r\n    if (!propertySchema) return {name: propName, type: \"Function\", isMethod: false, isStatic: isStatic};\r\n    var result = <IPropertySchema>{};\r\n    // merge schema\r\n    for (var key in propertySchema) { result[key] = propertySchema[key]; }\r\n    result.name = propName;\r\n    result.isMethod = !!(propertySchema && propertySchema.isMethod);\r\n    result.type = propertySchema.type || \"Function\";\r\n    result.isStatic = isStatic;\r\n    return result;\r\n}\r\n/**\r\n * 创建对象属性描述。\r\n * \r\n * @param {*} value \r\n * @param {IPropertySchema} propertySchema \r\n * @returns {IPropertySchema} \r\n */\r\nfunction createObjectPropertySchema(propName: string, value: any, propertySchema: IPropertySchema, isStatic: boolean): IPropertySchema {\r\n    if (value === null) return createNullValueSchema(propName, propertySchema, isStatic);\r\n    else if (value === undefined) return createUndefinedValueSchema(propName, propertySchema, isStatic);\r\n    else if (typeof value === \"function\") return createFunctionValueSchema(propName, propertySchema, isStatic);\r\n\r\n    var result = <IPropertySchema>{};\r\n    var key;\r\n    // merge schema\r\n    if (propertySchema) {\r\n        for (key in propertySchema) { result[key] = propertySchema[key]; }\r\n    }\r\n    // merge metadata by classObject\r\n    var classObject: IClass = value.constructor;\r\n    var classSchema = getOrCreateDeclaredClassSchema(classObject);\r\n    mergeClassSchemaToPropertySchema(result, classSchema);\r\n    result.name = propName;\r\n    result.isMethod = !!(propertySchema && propertySchema.isMethod);\r\n    result.type = classSchema.className;\r\n    result.isStatic = isStatic;\r\n    return result;\r\n}\r\n/**\r\n * 创建对象类型描述\r\n * \r\n * @param {IClassSchema} schema \r\n * @returns {IObjectSchema} \r\n */\r\nfunction createObjectSchema(schema: IClassSchema): IObjectSchema {\r\n    var result = <IObjectSchema>{\r\n        type: schema.className,\r\n        properties: {}\r\n    };\r\n    for (var key in schema) {\r\n        if (ignoreObjectSchemaMergeKeys[key] || key in result) { continue; }\r\n        result[key] = schema[key];\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * 获取或创建类描述\r\n * \r\n * @param {(Function | IClass)} classObject \r\n * @returns {IClassSchema} \r\n */\r\nfunction getOrCreateClassSchema(classObject: Function | IClass): IClassSchema {\r\n    var schema = class2Schema.get(classObject);\r\n    if (!schema) {\r\n        var className = uniqueId('unnamed_class');\r\n        schema = {\r\n            className: className,\r\n            superClass: \"Object\",\r\n            staticProperties: {},\r\n            properties: {}\r\n        };\r\n        name2Class[className] = <IClass>classObject;\r\n        class2Schema.set(classObject, schema);\r\n    }\r\n    return schema;\r\n}\r\n/**\r\n * 获取或创建全部可枚举成员的类描述\r\n * \r\n * @param {(Function | IClass)} classObject \r\n * @returns {IClassSchema} \r\n */\r\nfunction getOrCreateDeclaredClassSchema(classObject: Function | IClass): IClassSchema {\r\n    var declaredSchema: IClassSchema = class2DeclaredSchema.get(classObject);\r\n    if (!declaredSchema) {\r\n        var schema = getOrCreateClassSchema(classObject);\r\n        var superSchema = null;\r\n        var superClass = name2Class[schema.superClass];\r\n        if (superClass) {\r\n            superSchema = getOrCreateDeclaredClassSchema(superClass);\r\n        }\r\n        declaredSchema = mergeSchema(schema, superSchema);\r\n        var key, type, typeSchema: IClassSchema;\r\n        // static properties\r\n        var staticProperties = declaredSchema.staticProperties;\r\n        for (key in staticProperties) {\r\n            type = staticProperties[key].type;\r\n            if (type && name2Class[type]) {\r\n                typeSchema = getOrCreateDeclaredClassSchema(name2Class[type]);\r\n                mergeClassSchemaToPropertySchema(staticProperties[key], typeSchema);\r\n            }\r\n        }\r\n        // properties\r\n        var properties = declaredSchema.properties;\r\n        for (key in properties) {\r\n            type = properties[key].type;\r\n            if (type && name2Class[type]) {\r\n                typeSchema = getOrCreateDeclaredClassSchema(name2Class[type]);\r\n                mergeClassSchemaToPropertySchema(properties[key], typeSchema);\r\n            }\r\n        }\r\n        class2DeclaredSchema.set(classObject, declaredSchema);\r\n    }\r\n    return declaredSchema;\r\n}\r\n/**\r\n * 获取或创建属性描述\r\n * \r\n * @param {(Function | IClass)} classObject \r\n * @param {string} propName \r\n * @param {boolean} isMethod \r\n * @param {boolean} isStatic \r\n * @returns {IPropertySchema} \r\n */\r\nfunction getOrCreatePropertySchema(classObject: Function | IClass, propName: string, isMethod: boolean, isStatic: boolean): IPropertySchema {\r\n    var schema = getOrCreateClassSchema(classObject);\r\n    var properties = isStatic ? schema.staticProperties : schema.properties;\r\n    if (!properties[propName]) properties[propName] = {\r\n        name: propName,\r\n        isStatic: isStatic,\r\n        isMethod: isMethod,\r\n    }\r\n    return properties[propName];\r\n}\r\n/**\r\n * 获得制定对象的描述值。取值时依次调用钩子函数。\r\n * \r\n * @param {((value: any, classObject: Function | IClass, oriValue: any) => any[])} hookArray \r\n * @param {*} value \r\n * @param {(Function | IClass)} classObject \r\n * @returns {*} \r\n */\r\nfunction getMetadataValue(hookArray: (value: any, classObject: Function | IClass, oriValue: any) => any[] , value: any, classObject: Function | IClass): any {\r\n    if (!hookArray || !hookArray.length) return value;\r\n    var oriValue = value;\r\n    for (var i: number = 0; i < hookArray.length; i++) {\r\n        hookArray[i] && (value = hookArray[i](value , classObject , oriValue));\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * 类装饰器\r\n * \r\n * @param {string} key \r\n * @param {(Function | IClass)} classObject \r\n * @param {*} [value] \r\n */\r\nfunction classDecorator(key: string, classObject: Function | IClass, value?: any): void {\r\n    var schema = getOrCreateClassSchema(classObject);\r\n    schema[key] = getMetadataValue(hooks.classHook[key], value, classObject);\r\n}\r\n/**\r\n * 静态属性装饰器\r\n * \r\n * @param {string} key \r\n * @param {(Function | IClass)} classObject \r\n * @param {string} memberName \r\n * @param {boolean} isMethod \r\n * @param {*} [value] \r\n */\r\nfunction staticPropertyDecorator(key: string, classObject: Function | IClass, memberName: string, isMethod: boolean, value?: any): void {\r\n    var schema = getOrCreatePropertySchema(classObject , memberName , isMethod, true);\r\n    schema[key] = getMetadataValue(hooks.staticPropertyHook[key], value, classObject);\r\n}\r\n/**\r\n * 属性装饰器\r\n * \r\n * @param {string} key \r\n * @param {Object} classProto \r\n * @param {string} memberName \r\n * @param {boolean} isMethod \r\n * @param {*} [value] \r\n */\r\nfunction propertyDecorator(key: string, classProto: Object, memberName: string, isMethod: boolean, value?: any): void {\r\n    var classObject = classProto.constructor;\r\n    var schema = getOrCreatePropertySchema(classProto.constructor , memberName , isMethod, false);\r\n    schema[key] = getMetadataValue(hooks.propertyHook[key], value, classObject);\r\n}\r\nexport var metadata: IMetadataStatic = <IMetadataStatic>function (key: string, value?: any): Function {\r\n    function internalDecorator(target: Object, targetKey?: string, desc?: any): void {\r\n        if (isClass(target)) {\r\n            if (!targetKey) {\r\n                classDecorator(key, <Function>target, value);\r\n            } else {\r\n                // 如果desc === undefined则认为是一个静态成员属性，否则为成员方法\r\n                staticPropertyDecorator(key, <Function>target, targetKey, isMethodDesc(desc), value);\r\n            }\r\n        } else if (isDefined(targetKey) && isObject(target)){\r\n            // 如果desc === undefined则认为是一个成员属性，否则为成员方法\r\n            propertyDecorator(key, target, targetKey, isMethodDesc(desc), value);\r\n        } else {\r\n            throw new TypeError();\r\n        }\r\n    }\r\n    return internalDecorator;\r\n}\r\nmixin(metadata , {\r\n    // -----------------------------------------------------------\r\n    // Common Class Schema metadata\r\n    // ===========================================================\r\n    className: function (value: string): Function {\r\n        if (!value) throw ReferenceError();\r\n        return metadata(\"className\" , value); \r\n    },\r\n    superClass: function (value: string | Function | IClass): Function {\r\n        if (!value) throw ReferenceError();\r\n        var className = isClass(value) ? util.getClassName(<IClass>value) : value;\r\n        return metadata(\"superClass\" , className);\r\n    },\r\n    // -----------------------------------------------------------\r\n    // Common Property Schema metadata\r\n    // ===========================================================\r\n    type: function (value: string | Function | IClass): Function {\r\n        if (!value) throw ReferenceError();\r\n        var className = isClass(value) ? util.getClassName(<IClass>value) : value; \r\n        return metadata(\"type\" , className); \r\n    }\r\n})\r\n// -----------------------------------------------------------\r\n// Internal Schema\r\n// ===========================================================\r\nfunction registerPrimitiveType(className, classObject) {\r\n    name2Class[className] = classObject;\r\n    var schema = getOrCreateClassSchema(classObject);\r\n    schema.className = className;\r\n    class2DeclaredSchema.set(classObject, mixin({}, schema));\r\n}\r\nregisterPrimitiveType(\"Object\", Object);\r\nregisterPrimitiveType(\"Array\", Array);\r\nregisterPrimitiveType(\"Function\", Function);\r\nregisterPrimitiveType(\"Date\", Date);\r\nregisterPrimitiveType(\"Number\", Number);\r\nregisterPrimitiveType(\"String\", String);\r\nregisterPrimitiveType(\"Boolean\", Boolean);\r\n\r\n// -----------------------------------------------------------\r\n// Util\r\n// ===========================================================\r\n// register className hook\r\nregisterMetadataHook(hookTypes.CLASS, \"className\", (value: any, classObject: IClass, oriValue: any) => {\r\n    name2Class[value] = classObject;\r\n    return value;\r\n})\r\nexport var util: IReflectorUtil = {\r\n    getClass: function (obj: any): IClass {\r\n        if (isClass(obj)) return obj;\r\n        if (isDefined(obj)) return obj.constructor;\r\n        throw new ReferenceError();\r\n    },\r\n    getClassName: function (classObject: Function | IClass): string {\r\n        return util.getClassSchema(classObject).className;\r\n    },\r\n    getClassByName: function (className: string): IClass {\r\n        return <IClass>name2Class[className];\r\n    },\r\n    getSuperClass: function (classObject: Function | IClass): IClass {\r\n        var superClass = util.getClassSchema(classObject).superClass;\r\n        return util.getClassByName(superClass);\r\n    },\r\n    getSuperClassName: function (classObject: Function | IClass): string {\r\n        return util.getClassSchema(classObject).superClass;\r\n    },\r\n    newInstance: function (className: string, ...args): any {\r\n        var classObject = util.getClassByName(className);\r\n        if (isClass(classObject)) {\r\n            switch (args.length) {\r\n                case 0: return new classObject();\r\n                case 1: return new classObject(args[0]);\r\n                case 2: return new classObject(args[0], args[1]);\r\n                case 3: return new classObject(args[0], args[1], args[2]);\r\n                case 4: return new classObject(args[0], args[1], args[2], args[3]);\r\n                case 5: return new classObject(args[0], args[1], args[2], args[3], args[4]);\r\n                case 6: return new classObject(args[0], args[1], args[2], args[3], args[4], args[5]);\r\n                case 7: return new classObject(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n                case 8: return new classObject(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\r\n            }\r\n            throw new Error(\"Constructor parameter no more than 8.\");\r\n        } else {\r\n            throw new Error(`No Class was found by '${className}'`);\r\n        }\r\n    },\r\n    getClassSchema: function (classObject: Function | IClass, declared?: boolean): IClassSchema {\r\n        return declared ? getOrCreateDeclaredClassSchema(classObject) : getOrCreateClassSchema(classObject);\r\n    },\r\n    describe: function(obj: any, allMembers?: boolean): IObjectSchema {\r\n        if (obj === null) return {type: NULLTYPE, properties: {}};\r\n        if (obj === undefined) return {type: UNDEFINEDTYPE, properties: {}};\r\n        var isClassObject = isClass(obj);\r\n        var classObject: IClass = isClassObject ? obj : obj.constructor;\r\n        var classSchema = util.getClassSchema(classObject, true);\r\n        var result: IObjectSchema = createObjectSchema(classSchema);\r\n        var propertiesSchema = isClassObject ? classSchema.staticProperties : classSchema.properties;\r\n        // properties\r\n        var value;\r\n        for (var key in obj) {\r\n            value = obj[key];\r\n            if (allMembers || propertiesSchema[key]) {\r\n                result.properties[key] = createObjectPropertySchema(key, value, propertiesSchema[key], isClassObject);\r\n            }\r\n        }\r\n        return result;\r\n    },\r\n    describeProperty: function (obj: any, propertyName: string, value: any): IPropertySchema {\r\n        if (!isDefined(obj)) throw new ReferenceError();\r\n        var isClassObject = isClass(obj);\r\n        var value = arguments.length === 3 ? value : obj[propertyName];\r\n        var classObject: IClass = isClassObject ? obj : obj.constructor;\r\n        var classSchema = util.getClassSchema(classObject, true);\r\n        var propertiesSchema = isClassObject ? classSchema.staticProperties : classSchema.properties;\r\n        return createObjectPropertySchema(propertyName, value, propertiesSchema[propertyName], isClassObject);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/reflector.ts"],"sourceRoot":""}